--
-- PostgreSQL database dump
--

SET client_encoding = 'KOI8';
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON SCHEMA public IS 'Standard public schema';


SET search_path = public, pg_catalog;

--
-- Name: plpgsql_call_handler(); Type: FUNCTION; Schema: public; Owner: maxcom
--

CREATE FUNCTION plpgsql_call_handler() RETURNS language_handler
    AS '/usr/lib/pgsql/plpgsql.so', 'plpgsql_call_handler'
    LANGUAGE c;


ALTER FUNCTION public.plpgsql_call_handler() OWNER TO maxcom;

--
-- Name: plpgsql; Type: PROCEDURAL LANGUAGE; Schema: public; Owner: 
--

CREATE PROCEDURAL LANGUAGE plpgsql HANDLER plpgsql_call_handler;


--
-- Name: comins(); Type: FUNCTION; Schema: public; Owner: maxcom
--

CREATE FUNCTION comins() RETURNS "trigger"
    AS $$
DECLARE
	group int;
	thetopic topics%ROWTYPE;
BEGIN
	SELECT * INTO thetopic FROM topics WHERE topics.id = NEW.topic FOR UPDATE;
	IF NOT FOUND THEN
		UPDATE votenames SET stat1=stat1+1,stat2=stat2+1,stat3=stat3+1,stat4=stat4+1 WHERE votenames.topic = NEW.topic;
	ELSE
		UPDATE topics SET stat1=stat1+1,stat2=stat2+1,stat3=stat3+1,stat4=stat4+1,lastmod=CURRENT_TIMESTAMP WHERE topics.id = NEW.topic;
		SELECT groupid INTO group FROM topics WHERE topics.id = NEW.topic;
		UPDATE groups SET stat1=stat1+1,stat2=stat2+1,stat3=stat3+1,stat4=stat4+1 WHERE id = group;
	END IF;
	RETURN NULL;
END;
$$
    LANGUAGE plpgsql;


ALTER FUNCTION public.comins() OWNER TO maxcom;

--
-- Name: msgdel(); Type: FUNCTION; Schema: public; Owner: maxcom
--

CREATE FUNCTION msgdel() RETURNS "trigger"
    AS $$
DECLARE
	grid int;
	master groups%ROWTYPE;
	thetopic topics%ROWTYPE;
	thecomment comments%ROWTYPE;
BEGIN
	SELECT * INTO thetopic FROM topics WHERE id = NEW.msgid;
	IF FOUND THEN
		SELECT groupid INTO grid FROM topics WHERE id = NEW.msgid;
		UPDATE groups SET stat1=stat1-1 WHERE id = grid;
	ELSE
		SELECT * INTO thecomment FROM comments WHERE id = NEW.msgid;
		IF FOUND THEN
			SELECT topic INTO grid FROM comments WHERE id = NEW.msgid;
			UPDATE topics SET stat1=stat1-1, lastmod=CURRENT_TIMESTAMP WHERE id = grid;
			SELECT groupid INTO grid FROM topics WHERE id = grid;
			UPDATE groups SET stat1=stat1-1 WHERE id = grid;
		ELSE
			SELECT topic INTO grid FROM comments WHERE id = NEW.msgid;
			UPDATE votenames SET stat1=stat1-1 WHERE topic = grid;
		END IF;
	END IF;
	RETURN NULL;
END;
$$
    LANGUAGE plpgsql;


ALTER FUNCTION public.msgdel() OWNER TO maxcom;

--
-- Name: msgdel2(); Type: FUNCTION; Schema: public; Owner: maxcom
--

CREATE FUNCTION msgdel2() RETURNS opaque
    AS $$
DECLARE
	grid int;
	master groups%ROWTYPE;
BEGIN
	SELECT groupid INTO grid FROM messages WHERE messages.id = NEW.msgid;
	UPDATE groups SET stat1=stat1-1 WHERE groups.id = grid;
	SELECT * INTO master FROM groups WHERE id = grid;
	IF master.section = 0 THEN
		SELECT * FROM groups INTO master WHERE groups.id = (SELECT DISTINCT(messages.groupid) FROM messages, groups WHERE messages.comment_guid = master.id);
	END IF;
	UPDATE group_stat SET stat1=stat1-1 WHERE groupid = master.id;
	RETURN NULL;
END;
$$
    LANGUAGE plpgsql;


ALTER FUNCTION public.msgdel2() OWNER TO maxcom;

--
-- Name: msgins(); Type: FUNCTION; Schema: public; Owner: maxcom
--

CREATE FUNCTION msgins() RETURNS opaque
    AS $$
DECLARE
	master groups%ROWTYPE;
BEGIN
	UPDATE groups SET stat1=stat1+1,stat2=stat2+1,stat3=stat3+1,stat4=stat4+1 WHERE groups.id = NEW.groupid;
	SELECT * FROM groups INTO master WHERE groups.id = NEW.groupid;
	IF master.section = 0 THEN
		SELECT * FROM groups INTO master WHERE groups.id = (SELECT DISTINCT(messages.groupid) FROM messages, groups WHERE messages.comment_guid = NEW.groupid);
	END IF;
	UPDATE group_stat SET stat1=stat1+1,stat2=stat2+1,stat3=stat3+1 WHERE groupid = master.id;
	RETURN NULL;
END;
$$
    LANGUAGE plpgsql;


ALTER FUNCTION public.msgins() OWNER TO maxcom;

--
-- Name: stat_update(); Type: FUNCTION; Schema: public; Owner: maxcom
--

CREATE FUNCTION stat_update() RETURNS timestamp with time zone
    AS $$
DECLARE
	top record;
	st1 int;
	st2 int;
	st3 int;
	st4 int;
	now timestamp;
BEGIN
	now=CURRENT_TIMESTAMP;
	FOR top IN SELECT id FROM topics WHERE stat2!=0 FOR UPDATE LOOP
		SELECT count(*) INTO st1 FROM comments WHERE topic = top.id AND NOT deleted;
		SELECT count(*) INTO st2 FROM comments WHERE topic = top.id AND now-'3 day'::interval<postdate AND NOT deleted;
		SELECT count(*) INTO st3 FROM comments WHERE topic = top.id AND now-'1 day'::interval<postdate AND NOT deleted;
		SELECT count(*) INTO st4 FROM comments WHERE topic = top.id AND now-'1 hour'::interval<postdate AND NOT deleted;
		UPDATE topics SET stat1 = st1,stat2 = st2,stat3 = st3,stat4 = st4 WHERE id = top.id AND (stat1 != st1 OR stat2 != st2 OR stat3 != st3 OR stat4 != st4 );
	END LOOP;
	FOR top IN SELECT topic FROM votenames WHERE stat2!=0 FOR UPDATE LOOP
		SELECT count(*) INTO st1 FROM comments WHERE topic = top.topic AND NOT deleted;
		SELECT count(*) INTO st2 FROM comments WHERE topic = top.topic AND now-'3 day'::interval<postdate AND NOT deleted;
		SELECT count(*) INTO st3 FROM comments WHERE topic = top.topic AND now-'1 day'::interval<postdate AND NOT deleted;
		SELECT count(*) INTO st4 FROM comments WHERE topic = top.topic AND now-'1 hour'::interval<postdate AND NOT deleted;
		UPDATE votenames SET stat1 = st1,stat2 = st2,stat3 = st3,stat4 = st4 WHERE topic = top.topic;
	END LOOP;
	RETURN now;
END;
$$
    LANGUAGE plpgsql;


ALTER FUNCTION public.stat_update() OWNER TO maxcom;

--
-- Name: stat_update2(); Type: FUNCTION; Schema: public; Owner: maxcom
--

CREATE FUNCTION stat_update2() RETURNS timestamp with time zone
    AS $$
DECLARE
	grp record;
	st1 int;
	st2 int;
	st3 int;
	st4 int;
	t1 int;
	t2 int;
	t3 int;
	t4 int;
	now timestamp;
BEGIN
	now=CURRENT_TIMESTAMP;
	FOR grp IN SELECT id FROM groups WHERE stat2!=0 FOR UPDATE LOOP
		SELECT sum(stat1) INTO st1 FROM topics WHERE groupid = grp.id AND NOT deleted;
		SELECT sum(stat2) INTO st2 FROM topics WHERE groupid = grp.id AND NOT deleted;
		SELECT sum(stat3) INTO st3 FROM topics WHERE groupid = grp.id AND NOT deleted;
		SELECT sum(stat4) INTO st4 FROM topics WHERE groupid = grp.id AND NOT deleted;
		SELECT count(*) INTO t1 FROM topics WHERE groupid = grp.id AND NOT deleted;
		SELECT count(*) INTO t2 FROM topics WHERE groupid = grp.id AND now-'3 day'::interval<postdate AND NOT deleted;
		SELECT count(*) INTO t3 FROM topics WHERE groupid = grp.id AND now-'1 day'::interval<postdate AND NOT deleted;
		SELECT count(*) INTO t4 FROM topics WHERE groupid = grp.id AND now-'1 hour'::interval<postdate AND NOT deleted;
		UPDATE groups SET stat1 = st1 + t1 ,stat2 = st2 + t2 ,stat3 = st3 + t3 ,stat4 = st4 + t4 WHERE id = grp.id AND ( stat1 != st1 + t1 OR stat2 != st2 + t2 OR stat3 != st3 + t3 OR stat4 != st4 + t4 );
	END LOOP;
	RETURN now;
END;
$$
    LANGUAGE plpgsql;


ALTER FUNCTION public.stat_update2() OWNER TO maxcom;

--
-- Name: topins(); Type: FUNCTION; Schema: public; Owner: maxcom
--

CREATE FUNCTION topins() RETURNS "trigger"
    AS $$
BEGIN
	UPDATE groups SET stat1=stat1+1,stat2=stat2+1,stat3=stat3+1,stat4=stat4+1 WHERE groups.id = NEW.groupid;
	UPDATE topics SET lastmod=CURRENT_TIMESTAMP WHERE id = NEW.id;
	RETURN NULL;
END;
$$
    LANGUAGE plpgsql;


ALTER FUNCTION public.topins() OWNER TO maxcom;

--
-- Name: update_monthly_stats(); Type: FUNCTION; Schema: public; Owner: maxcom
--

CREATE FUNCTION update_monthly_stats() RETURNS timestamp without time zone
    AS $$
begin
delete from monthly_stats;
insert into  monthly_stats ( select section, date_part('year', postdate) as year, date_part('month', postdate) as month, count(topics.id) as c from topics, groups, sections where topics.groupid=groups.id and groups.section=sections.id and topics.moderate and not deleted group by section, year, month);
return CURRENT_TIMESTAMP;
end;
$$
    LANGUAGE plpgsql;


ALTER FUNCTION public.update_monthly_stats() OWNER TO maxcom;

SET default_tablespace = '';

SET default_with_oids = true;

--
-- Name: b_ips; Type: TABLE; Schema: public; Owner: linuxweb; Tablespace: 
--

CREATE TABLE b_ips (
    ip inet NOT NULL,
    mod_id integer NOT NULL,
    date timestamp with time zone NOT NULL,
    reason character varying(255),
    ban_date timestamp without time zone
);


ALTER TABLE public.b_ips OWNER TO linuxweb;

--
-- Name: TABLE b_ips; Type: COMMENT; Schema: public; Owner: linuxweb
--

COMMENT ON TABLE b_ips IS 'banned ip list table';


--
-- Name: banners; Type: TABLE; Schema: public; Owner: maxcom; Tablespace: 
--

CREATE TABLE banners (
    id integer NOT NULL,
    banner character(100) NOT NULL,
    url character(100) NOT NULL,
    total integer NOT NULL,
    today integer NOT NULL,
    clicks integer NOT NULL,
    maxtoday integer
);


ALTER TABLE public.banners OWNER TO maxcom;

--
-- Name: comments; Type: TABLE; Schema: public; Owner: maxcom; Tablespace: 
--

CREATE TABLE comments (
    id integer NOT NULL,
    topic integer NOT NULL,
    userid integer NOT NULL,
    title character varying(255) NOT NULL,
    postdate timestamp with time zone NOT NULL,
    replyto integer,
    deleted boolean DEFAULT false NOT NULL,
    postip inet
);


ALTER TABLE public.comments OWNER TO maxcom;

--
-- Name: del_info; Type: TABLE; Schema: public; Owner: maxcom; Tablespace: 
--

CREATE TABLE del_info (
    msgid integer NOT NULL,
    delby integer NOT NULL,
    reason text
);


ALTER TABLE public.del_info OWNER TO maxcom;

--
-- Name: groups; Type: TABLE; Schema: public; Owner: maxcom; Tablespace: 
--

CREATE TABLE groups (
    id integer NOT NULL,
    title character varying(255) NOT NULL,
    image character varying(255),
    section integer NOT NULL,
    stat1 integer DEFAULT 0 NOT NULL,
    stat2 integer DEFAULT 0 NOT NULL,
    stat3 integer DEFAULT 0 NOT NULL,
    stat4 integer DEFAULT 0 NOT NULL,
    moderator integer,
    restrict_topics integer
);


ALTER TABLE public.groups OWNER TO maxcom;

--
-- Name: monthly_stats; Type: TABLE; Schema: public; Owner: maxcom; Tablespace: 
--

CREATE TABLE monthly_stats (
    section integer,
    "year" integer NOT NULL,
    "month" integer NOT NULL,
    c integer NOT NULL
);


ALTER TABLE public.monthly_stats OWNER TO maxcom;

--
-- Name: msgbase; Type: TABLE; Schema: public; Owner: maxcom; Tablespace: 
--

CREATE TABLE msgbase (
    id bigint NOT NULL,
    message text NOT NULL
);


ALTER TABLE public.msgbase OWNER TO maxcom;

--
-- Name: puzzle; Type: TABLE; Schema: public; Owner: maxcom; Tablespace: 
--

CREATE TABLE puzzle (
    userid integer NOT NULL,
    score integer NOT NULL
);


ALTER TABLE public.puzzle OWNER TO maxcom;

--
-- Name: puzzleq; Type: TABLE; Schema: public; Owner: maxcom; Tablespace: 
--

CREATE TABLE puzzleq (
    id integer NOT NULL,
    score integer DEFAULT 0 NOT NULL
);


ALTER TABLE public.puzzleq OWNER TO maxcom;

--
-- Name: s_guid; Type: SEQUENCE; Schema: public; Owner: maxcom
--

CREATE SEQUENCE s_guid
    INCREMENT BY 1
    MAXVALUE 2147483647
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.s_guid OWNER TO maxcom;

--
-- Name: s_msg; Type: SEQUENCE; Schema: public; Owner: maxcom
--

CREATE SEQUENCE s_msg
    START WITH 1
    INCREMENT BY 1
    MAXVALUE 2147483647
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.s_msg OWNER TO maxcom;

--
-- Name: s_msgid; Type: SEQUENCE; Schema: public; Owner: maxcom
--

CREATE SEQUENCE s_msgid
    INCREMENT BY 1
    MAXVALUE 2147483647
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.s_msgid OWNER TO maxcom;

--
-- Name: s_uid; Type: SEQUENCE; Schema: public; Owner: maxcom
--

CREATE SEQUENCE s_uid
    INCREMENT BY 1
    MAXVALUE 2147483647
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.s_uid OWNER TO maxcom;

--
-- Name: sections; Type: TABLE; Schema: public; Owner: maxcom; Tablespace: 
--

CREATE TABLE sections (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    moderate boolean NOT NULL,
    imagepost boolean NOT NULL,
    preformat boolean NOT NULL,
    linkup boolean NOT NULL,
    linktext character varying(255),
    havelink boolean NOT NULL,
    browsable boolean NOT NULL,
    "comment" boolean NOT NULL,
    expire interval NOT NULL,
    lineonly boolean NOT NULL
);


ALTER TABLE public.sections OWNER TO maxcom;

--
-- Name: top10; Type: TABLE; Schema: public; Owner: maxcom; Tablespace: 
--

CREATE TABLE top10 (
    msgid integer NOT NULL,
    mess_order integer,
    CONSTRAINT "$1" CHECK ((mess_order > 0))
);


ALTER TABLE public.top10 OWNER TO maxcom;

--
-- Name: topics; Type: TABLE; Schema: public; Owner: maxcom; Tablespace: 
--

CREATE TABLE topics (
    id integer NOT NULL,
    groupid integer NOT NULL,
    userid integer NOT NULL,
    title character varying(255) NOT NULL,
    url character varying(255),
    moderate boolean DEFAULT false NOT NULL,
    postdate timestamp with time zone NOT NULL,
    linktext character varying(255),
    deleted boolean DEFAULT false NOT NULL,
    stat1 integer DEFAULT 0 NOT NULL,
    stat2 integer DEFAULT 0 NOT NULL,
    stat3 integer DEFAULT 0 NOT NULL,
    stat4 integer DEFAULT 0 NOT NULL,
    lastmod timestamp with time zone,
    commitby integer,
    notop boolean,
    commitdate timestamp without time zone,
    postscore integer,
    postip inet
);


ALTER TABLE public.topics OWNER TO maxcom;

--
-- Name: users; Type: TABLE; Schema: public; Owner: maxcom; Tablespace: 
--

CREATE TABLE users (
    id integer NOT NULL,
    name character varying(255),
    nick character varying(80) NOT NULL,
    passwd character varying(40),
    url character varying(255),
    email character varying(255),
    canmod boolean DEFAULT false NOT NULL,
    photo character varying(100),
    town character varying(100),
    candel boolean DEFAULT false NOT NULL,
    lostpwd timestamp with time zone DEFAULT '1970-01-01 03:00:00+03'::timestamp with time zone NOT NULL,
    blocked boolean,
    score integer,
    max_score integer,
    lastlogin timestamp without time zone,
    regdate timestamp without time zone,
    activated boolean DEFAULT false NOT NULL
);


ALTER TABLE public.users OWNER TO maxcom;

--
-- Name: vote_id; Type: SEQUENCE; Schema: public; Owner: maxcom
--

CREATE SEQUENCE vote_id
    INCREMENT BY 1
    MAXVALUE 2147483647
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.vote_id OWNER TO maxcom;

--
-- Name: votenames; Type: TABLE; Schema: public; Owner: maxcom; Tablespace: 
--

CREATE TABLE votenames (
    id integer NOT NULL,
    title text NOT NULL,
    topic integer NOT NULL,
    groupid integer,
    stat1 integer DEFAULT 0 NOT NULL,
    stat2 integer DEFAULT 0 NOT NULL,
    stat3 integer DEFAULT 0 NOT NULL,
    stat4 integer DEFAULT 0 NOT NULL,
    moderate boolean DEFAULT false NOT NULL,
    commitby integer,
    commitdate timestamp without time zone,
    userid integer NOT NULL,
    deleted boolean DEFAULT false NOT NULL,
    postdate timestamp without time zone
);


ALTER TABLE public.votenames OWNER TO maxcom;

--
-- Name: votes; Type: TABLE; Schema: public; Owner: maxcom; Tablespace: 
--

CREATE TABLE votes (
    id integer NOT NULL,
    vote integer NOT NULL,
    label text NOT NULL,
    votes integer DEFAULT 0 NOT NULL
);


ALTER TABLE public.votes OWNER TO maxcom;

--
-- Name: votes_id; Type: SEQUENCE; Schema: public; Owner: maxcom
--

CREATE SEQUENCE votes_id
    INCREMENT BY 1
    MAXVALUE 2147483647
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.votes_id OWNER TO maxcom;

--
-- Name: banners_pkey; Type: CONSTRAINT; Schema: public; Owner: maxcom; Tablespace: 
--

ALTER TABLE ONLY banners
    ADD CONSTRAINT banners_pkey PRIMARY KEY (id);


ALTER INDEX public.banners_pkey OWNER TO maxcom;

SET default_tablespace = indexspace;

--
-- Name: comments_pkey; Type: CONSTRAINT; Schema: public; Owner: maxcom; Tablespace: indexspace
--

ALTER TABLE ONLY comments
    ADD CONSTRAINT comments_pkey PRIMARY KEY (id);


ALTER INDEX public.comments_pkey OWNER TO maxcom;

SET default_tablespace = '';

--
-- Name: del_info_pkey; Type: CONSTRAINT; Schema: public; Owner: maxcom; Tablespace: 
--

ALTER TABLE ONLY del_info
    ADD CONSTRAINT del_info_pkey PRIMARY KEY (msgid);


ALTER INDEX public.del_info_pkey OWNER TO maxcom;

SET default_tablespace = indexspace;

--
-- Name: groups_pkey; Type: CONSTRAINT; Schema: public; Owner: maxcom; Tablespace: indexspace
--

ALTER TABLE ONLY groups
    ADD CONSTRAINT groups_pkey PRIMARY KEY (id);


ALTER INDEX public.groups_pkey OWNER TO maxcom;

SET default_tablespace = '';

--
-- Name: msgbase_pkey; Type: CONSTRAINT; Schema: public; Owner: maxcom; Tablespace: 
--

ALTER TABLE ONLY msgbase
    ADD CONSTRAINT msgbase_pkey PRIMARY KEY (id);


ALTER INDEX public.msgbase_pkey OWNER TO maxcom;

--
-- Name: puzzleq_pkey; Type: CONSTRAINT; Schema: public; Owner: maxcom; Tablespace: 
--

ALTER TABLE ONLY puzzleq
    ADD CONSTRAINT puzzleq_pkey PRIMARY KEY (id);


ALTER INDEX public.puzzleq_pkey OWNER TO maxcom;

--
-- Name: sections_pkey; Type: CONSTRAINT; Schema: public; Owner: maxcom; Tablespace: 
--

ALTER TABLE ONLY sections
    ADD CONSTRAINT sections_pkey PRIMARY KEY (id);


ALTER INDEX public.sections_pkey OWNER TO maxcom;

--
-- Name: top10_pkey; Type: CONSTRAINT; Schema: public; Owner: maxcom; Tablespace: 
--

ALTER TABLE ONLY top10
    ADD CONSTRAINT top10_pkey PRIMARY KEY (msgid);


ALTER INDEX public.top10_pkey OWNER TO maxcom;

SET default_tablespace = indexspace;

--
-- Name: users_pkey; Type: CONSTRAINT; Schema: public; Owner: maxcom; Tablespace: indexspace
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


ALTER INDEX public.users_pkey OWNER TO maxcom;

SET default_tablespace = '';

--
-- Name: votenames_pkey; Type: CONSTRAINT; Schema: public; Owner: maxcom; Tablespace: 
--

ALTER TABLE ONLY votenames
    ADD CONSTRAINT votenames_pkey PRIMARY KEY (id);


ALTER INDEX public.votenames_pkey OWNER TO maxcom;

--
-- Name: votes_pkey; Type: CONSTRAINT; Schema: public; Owner: maxcom; Tablespace: 
--

ALTER TABLE ONLY votes
    ADD CONSTRAINT votes_pkey PRIMARY KEY (id);


ALTER INDEX public.votes_pkey OWNER TO maxcom;

SET default_tablespace = indexspace;

--
-- Name: comment_author; Type: INDEX; Schema: public; Owner: maxcom; Tablespace: indexspace
--

CREATE INDEX comment_author ON comments USING btree (userid);


ALTER INDEX public.comment_author OWNER TO maxcom;

--
-- Name: comment_postdate; Type: INDEX; Schema: public; Owner: maxcom; Tablespace: indexspace
--

CREATE INDEX comment_postdate ON comments USING btree (postdate);


ALTER INDEX public.comment_postdate OWNER TO maxcom;

--
-- Name: comment_reply; Type: INDEX; Schema: public; Owner: maxcom; Tablespace: indexspace
--

CREATE INDEX comment_reply ON comments USING btree (replyto);


ALTER INDEX public.comment_reply OWNER TO maxcom;

--
-- Name: comment_topic; Type: INDEX; Schema: public; Owner: maxcom; Tablespace: indexspace
--

CREATE INDEX comment_topic ON comments USING btree (topic);


ALTER INDEX public.comment_topic OWNER TO maxcom;

--
-- Name: commit_order; Type: INDEX; Schema: public; Owner: maxcom; Tablespace: indexspace
--

CREATE INDEX commit_order ON topics USING btree (commitdate);


ALTER INDEX public.commit_order OWNER TO maxcom;

SET default_tablespace = '';

--
-- Name: del_info_delby; Type: INDEX; Schema: public; Owner: maxcom; Tablespace: 
--

CREATE INDEX del_info_delby ON del_info USING btree (delby);


ALTER INDEX public.del_info_delby OWNER TO maxcom;

SET default_tablespace = indexspace;

--
-- Name: group_section; Type: INDEX; Schema: public; Owner: maxcom; Tablespace: indexspace
--

CREATE INDEX group_section ON groups USING btree (section);


ALTER INDEX public.group_section OWNER TO maxcom;

SET default_tablespace = '';

--
-- Name: i_nick; Type: INDEX; Schema: public; Owner: maxcom; Tablespace: 
--

CREATE UNIQUE INDEX i_nick ON users USING btree (nick);


ALTER INDEX public.i_nick OWNER TO maxcom;

--
-- Name: i_votes_vote; Type: INDEX; Schema: public; Owner: maxcom; Tablespace: 
--

CREATE INDEX i_votes_vote ON votes USING btree (vote);


ALTER INDEX public.i_votes_vote OWNER TO maxcom;

--
-- Name: puzzle_userid; Type: INDEX; Schema: public; Owner: maxcom; Tablespace: 
--

CREATE UNIQUE INDEX puzzle_userid ON puzzle USING btree (userid);


ALTER INDEX public.puzzle_userid OWNER TO maxcom;

SET default_tablespace = indexspace;

--
-- Name: topic_author; Type: INDEX; Schema: public; Owner: maxcom; Tablespace: indexspace
--

CREATE INDEX topic_author ON topics USING btree (userid);


ALTER INDEX public.topic_author OWNER TO maxcom;

--
-- Name: topic_group; Type: INDEX; Schema: public; Owner: maxcom; Tablespace: indexspace
--

CREATE INDEX topic_group ON topics USING btree (groupid);


ALTER INDEX public.topic_group OWNER TO maxcom;

--
-- Name: topic_postip; Type: INDEX; Schema: public; Owner: maxcom; Tablespace: indexspace
--

CREATE INDEX topic_postip ON topics USING btree (postip);


ALTER INDEX public.topic_postip OWNER TO maxcom;

--
-- Name: topics_date; Type: INDEX; Schema: public; Owner: maxcom; Tablespace: indexspace
--

CREATE INDEX topics_date ON topics USING btree (postdate);


ALTER INDEX public.topics_date OWNER TO maxcom;

--
-- Name: topics_pkey; Type: INDEX; Schema: public; Owner: maxcom; Tablespace: indexspace
--

CREATE UNIQUE INDEX topics_pkey ON topics USING btree (id);


ALTER INDEX public.topics_pkey OWNER TO maxcom;

SET default_tablespace = '';

--
-- Name: votenames_topic_key; Type: INDEX; Schema: public; Owner: maxcom; Tablespace: 
--

CREATE UNIQUE INDEX votenames_topic_key ON votenames USING btree (topic);


ALTER INDEX public.votenames_topic_key OWNER TO maxcom;

--
-- Name: RI_ConstraintTrigger_7915711; Type: TRIGGER; Schema: public; Owner: maxcom
--

CREATE CONSTRAINT TRIGGER "<unnamed>"
    AFTER DELETE ON sections
    FROM groups
    NOT DEFERRABLE INITIALLY IMMEDIATE
    FOR EACH ROW
    EXECUTE PROCEDURE "RI_FKey_noaction_del"('<unnamed>', 'groups', 'sections', 'UNSPECIFIED', 'section', 'id');


--
-- Name: RI_ConstraintTrigger_7915712; Type: TRIGGER; Schema: public; Owner: maxcom
--

CREATE CONSTRAINT TRIGGER "<unnamed>"
    AFTER UPDATE ON sections
    FROM groups
    NOT DEFERRABLE INITIALLY IMMEDIATE
    FOR EACH ROW
    EXECUTE PROCEDURE "RI_FKey_noaction_upd"('<unnamed>', 'groups', 'sections', 'UNSPECIFIED', 'section', 'id');


--
-- Name: comins_t; Type: TRIGGER; Schema: public; Owner: maxcom
--

CREATE TRIGGER comins_t
    AFTER INSERT ON comments
    FOR EACH ROW
    EXECUTE PROCEDURE comins();


--
-- Name: msgdel_t; Type: TRIGGER; Schema: public; Owner: maxcom
--

CREATE TRIGGER msgdel_t
    AFTER INSERT ON del_info
    FOR EACH ROW
    EXECUTE PROCEDURE msgdel();


--
-- Name: topins_t; Type: TRIGGER; Schema: public; Owner: maxcom
--

CREATE TRIGGER topins_t
    AFTER INSERT ON topics
    FOR EACH ROW
    EXECUTE PROCEDURE topins();


--
-- Name: monthly_stats_section_fkey; Type: FK CONSTRAINT; Schema: public; Owner: maxcom
--

ALTER TABLE ONLY monthly_stats
    ADD CONSTRAINT monthly_stats_section_fkey FOREIGN KEY (section) REFERENCES sections(id);


--
-- Name: votenames_commitby_fkey; Type: FK CONSTRAINT; Schema: public; Owner: maxcom
--

ALTER TABLE ONLY votenames
    ADD CONSTRAINT votenames_commitby_fkey FOREIGN KEY (commitby) REFERENCES users(id);


--
-- Name: votenames_userid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: maxcom
--

ALTER TABLE ONLY votenames
    ADD CONSTRAINT votenames_userid_fkey FOREIGN KEY (userid) REFERENCES users(id);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- Name: b_ips; Type: ACL; Schema: public; Owner: linuxweb
--

REVOKE ALL ON TABLE b_ips FROM PUBLIC;
REVOKE ALL ON TABLE b_ips FROM linuxweb;
GRANT ALL ON TABLE b_ips TO linuxweb;
GRANT SELECT ON TABLE b_ips TO mator;
GRANT SELECT ON TABLE b_ips TO shaman;
GRANT SELECT ON TABLE b_ips TO maxcom;


--
-- Name: banners; Type: ACL; Schema: public; Owner: maxcom
--

REVOKE ALL ON TABLE banners FROM PUBLIC;
REVOKE ALL ON TABLE banners FROM maxcom;
GRANT ALL ON TABLE banners TO maxcom;
GRANT SELECT,UPDATE,DELETE ON TABLE banners TO linuxweb;


--
-- Name: comments; Type: ACL; Schema: public; Owner: maxcom
--

REVOKE ALL ON TABLE comments FROM PUBLIC;
REVOKE ALL ON TABLE comments FROM maxcom;
GRANT ALL ON TABLE comments TO maxcom;
GRANT INSERT,SELECT,UPDATE,DELETE ON TABLE comments TO linuxweb;
GRANT SELECT ON TABLE comments TO mator;
GRANT SELECT ON TABLE comments TO shaman;


--
-- Name: del_info; Type: ACL; Schema: public; Owner: maxcom
--

REVOKE ALL ON TABLE del_info FROM PUBLIC;
REVOKE ALL ON TABLE del_info FROM maxcom;
GRANT ALL ON TABLE del_info TO maxcom;
GRANT INSERT,SELECT,UPDATE,DELETE ON TABLE del_info TO linuxweb;
GRANT SELECT ON TABLE del_info TO mator;


--
-- Name: groups; Type: ACL; Schema: public; Owner: maxcom
--

REVOKE ALL ON TABLE groups FROM PUBLIC;
REVOKE ALL ON TABLE groups FROM maxcom;
GRANT ALL ON TABLE groups TO maxcom;
GRANT INSERT,SELECT,UPDATE,DELETE ON TABLE groups TO linuxweb;
GRANT SELECT ON TABLE groups TO mator;


--
-- Name: monthly_stats; Type: ACL; Schema: public; Owner: maxcom
--

REVOKE ALL ON TABLE monthly_stats FROM PUBLIC;
REVOKE ALL ON TABLE monthly_stats FROM maxcom;
GRANT ALL ON TABLE monthly_stats TO maxcom;
GRANT SELECT ON TABLE monthly_stats TO linuxweb;


--
-- Name: msgbase; Type: ACL; Schema: public; Owner: maxcom
--

REVOKE ALL ON TABLE msgbase FROM PUBLIC;
REVOKE ALL ON TABLE msgbase FROM maxcom;
GRANT ALL ON TABLE msgbase TO maxcom;
GRANT INSERT,SELECT,UPDATE ON TABLE msgbase TO linuxweb;


--
-- Name: puzzle; Type: ACL; Schema: public; Owner: maxcom
--

REVOKE ALL ON TABLE puzzle FROM PUBLIC;
REVOKE ALL ON TABLE puzzle FROM maxcom;
GRANT ALL ON TABLE puzzle TO maxcom;
GRANT SELECT,UPDATE,DELETE ON TABLE puzzle TO linuxweb;


--
-- Name: puzzleq; Type: ACL; Schema: public; Owner: maxcom
--

REVOKE ALL ON TABLE puzzleq FROM PUBLIC;
REVOKE ALL ON TABLE puzzleq FROM maxcom;
GRANT ALL ON TABLE puzzleq TO maxcom;
GRANT SELECT,UPDATE,DELETE ON TABLE puzzleq TO linuxweb;


--
-- Name: s_guid; Type: ACL; Schema: public; Owner: maxcom
--

REVOKE ALL ON TABLE s_guid FROM PUBLIC;
REVOKE ALL ON TABLE s_guid FROM maxcom;
GRANT ALL ON TABLE s_guid TO maxcom;
GRANT SELECT,UPDATE,DELETE ON TABLE s_guid TO linuxweb;


--
-- Name: s_msgid; Type: ACL; Schema: public; Owner: maxcom
--

REVOKE ALL ON TABLE s_msgid FROM PUBLIC;
REVOKE ALL ON TABLE s_msgid FROM maxcom;
GRANT ALL ON TABLE s_msgid TO maxcom;
GRANT ALL ON TABLE s_msgid TO linuxweb;


--
-- Name: s_uid; Type: ACL; Schema: public; Owner: maxcom
--

REVOKE ALL ON TABLE s_uid FROM PUBLIC;
REVOKE ALL ON TABLE s_uid FROM maxcom;
GRANT ALL ON TABLE s_uid TO maxcom;
GRANT SELECT,UPDATE,DELETE ON TABLE s_uid TO linuxweb;


--
-- Name: sections; Type: ACL; Schema: public; Owner: maxcom
--

REVOKE ALL ON TABLE sections FROM PUBLIC;
REVOKE ALL ON TABLE sections FROM maxcom;
GRANT ALL ON TABLE sections TO maxcom;
GRANT SELECT,UPDATE,DELETE ON TABLE sections TO linuxweb;
GRANT SELECT ON TABLE sections TO mator;
GRANT SELECT ON TABLE sections TO shaman;


--
-- Name: top10; Type: ACL; Schema: public; Owner: maxcom
--

REVOKE ALL ON TABLE top10 FROM PUBLIC;
REVOKE ALL ON TABLE top10 FROM maxcom;
GRANT ALL ON TABLE top10 TO maxcom;
GRANT INSERT,SELECT,UPDATE,DELETE ON TABLE top10 TO linuxweb;


--
-- Name: topics; Type: ACL; Schema: public; Owner: maxcom
--

REVOKE ALL ON TABLE topics FROM PUBLIC;
REVOKE ALL ON TABLE topics FROM maxcom;
GRANT ALL ON TABLE topics TO maxcom;
GRANT INSERT,SELECT,UPDATE,DELETE ON TABLE topics TO linuxweb;
GRANT SELECT ON TABLE topics TO mator;
GRANT SELECT ON TABLE topics TO shaman;


--
-- Name: users; Type: ACL; Schema: public; Owner: maxcom
--

REVOKE ALL ON TABLE users FROM PUBLIC;
REVOKE ALL ON TABLE users FROM maxcom;
GRANT ALL ON TABLE users TO maxcom;
GRANT INSERT,SELECT,UPDATE,DELETE ON TABLE users TO linuxweb;
GRANT SELECT ON TABLE users TO mator;
GRANT SELECT ON TABLE users TO shaman;


--
-- Name: vote_id; Type: ACL; Schema: public; Owner: maxcom
--

REVOKE ALL ON TABLE vote_id FROM PUBLIC;
REVOKE ALL ON TABLE vote_id FROM maxcom;
GRANT ALL ON TABLE vote_id TO maxcom;
GRANT UPDATE ON TABLE vote_id TO linuxweb;


--
-- Name: votenames; Type: ACL; Schema: public; Owner: maxcom
--

REVOKE ALL ON TABLE votenames FROM PUBLIC;
REVOKE ALL ON TABLE votenames FROM maxcom;
GRANT ALL ON TABLE votenames TO maxcom;
GRANT INSERT,SELECT,UPDATE,DELETE ON TABLE votenames TO linuxweb;


--
-- Name: votes; Type: ACL; Schema: public; Owner: maxcom
--

REVOKE ALL ON TABLE votes FROM PUBLIC;
REVOKE ALL ON TABLE votes FROM maxcom;
GRANT ALL ON TABLE votes TO maxcom;
GRANT INSERT,SELECT,UPDATE,DELETE ON TABLE votes TO linuxweb;


--
-- Name: votes_id; Type: ACL; Schema: public; Owner: maxcom
--

REVOKE ALL ON TABLE votes_id FROM PUBLIC;
REVOKE ALL ON TABLE votes_id FROM maxcom;
GRANT ALL ON TABLE votes_id TO maxcom;
GRANT UPDATE ON TABLE votes_id TO linuxweb;


--
-- PostgreSQL database dump complete
--

