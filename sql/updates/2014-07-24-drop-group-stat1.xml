<!--
  ~ Copyright 1998-2012 Linux.org.ru
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

    <changeSet id="2014072401" author="Maxim Valyanskiy">
        <sql splitStatements="false">
              CREATE OR REPLACE FUNCTION public.stat_update2()
                  RETURNS timestamp with time zone
                  LANGUAGE plpgsql
              AS $function$
                        DECLARE
                            grp record;
                            s3 int;
                            t3 int;
                            now timestamp;
                        BEGIN
                            now=CURRENT_TIMESTAMP;
                            FOR grp IN SELECT id FROM groups WHERE stat3!=0 FOR UPDATE LOOP
                                SELECT sum(stat3) INTO s3 FROM topics WHERE groupid = grp.id AND NOT deleted;
                                SELECT count(*) INTO t3 FROM topics WHERE groupid = grp.id AND now-'1 day'::interval&lt;postdate AND NOT deleted;
                                UPDATE groups SET stat3 = s3 + t3 WHERE id = grp.id AND stat3 != s3 + t3;
                            END LOOP;
                            RETURN now;
                        END;
                        $function$
        </sql>
    </changeSet>
  
    <changeSet id="2014072402" author="Maxim Valyanskiy">
      <dropColumn tableName="groups" columnName="stat1"/>
    </changeSet>

    <changeSet id="2014072403" author="Maxim Valyanskiy">
        <sql splitStatements="false">
          CREATE OR REPLACE FUNCTION public.comins()
              RETURNS trigger
              LANGUAGE plpgsql
          AS $function$
                        DECLARE
                                cgroup int;
                        BEGIN
                                SELECT groupid INTO cgroup FROM topics WHERE topics.id = NEW.topic;
                                UPDATE topics SET stat1=stat1+1,stat2=stat2+1,stat3=stat3+1,stat4=stat4+1,lastmod=CURRENT_TIMESTAMP WHERE topics.id = NEW.topic;
                                UPDATE groups SET stat3=stat3+1 WHERE id = cgroup;
                                RETURN NULL;
                        END;
                        $function$
        </sql>
    </changeSet>

    <changeSet id="2014072404" author="Maxim Valyanskiy">
        <sql splitStatements="false">
            CREATE OR REPLACE FUNCTION public.topins()
                RETURNS trigger
                LANGUAGE plpgsql
            AS $function$
                        BEGIN
                            UPDATE groups SET stat3=stat3+1 WHERE groups.id = NEW.groupid;
                            UPDATE topics SET lastmod=CURRENT_TIMESTAMP WHERE id = NEW.id;
                            INSERT INTO memories (userid, topic) VALUES (NEW.userid, NEW.id);
                            RETURN NULL;
                        END;
                        $function$
        </sql>
    </changeSet>

    <changeSet id="2014072405" author="Maxim Valyanskiy">
        <sql splitStatements="false">
            CREATE OR REPLACE FUNCTION public.msgdel()
                RETURNS trigger
                LANGUAGE plpgsql
            AS $function$
            DECLARE
                    grid int;
                    thetopic topics%ROWTYPE;
            BEGIN
                    SELECT * INTO thetopic FROM topics WHERE id = NEW.msgid;
                    IF FOUND THEN
                            SELECT groupid INTO grid FROM topics WHERE id = NEW.msgid;
                            UPDATE topics SET lastmod=CURRENT_TIMESTAMP WHERE id = NEW.msgid;
                            UPDATE comments SET topic_deleted=true WHERE topic = NEW.msgid;
                    END IF;
                    RETURN NULL;
            END;
            $function$
        </sql>
    </changeSet>

</databaseChangeLog>
