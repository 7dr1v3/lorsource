<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 1998-2009 Linux.org.ru
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <bean class="org.springframework.beans.factory.config.PropertiesFactoryBean" scope="singleton"
          name="properties">
        <property name="locations">
            <list>
                <value>/WEB-INF/config.properties.dist</value>
                <value>/WEB-INF/config.properties</value>
                <value>/WEB-INF/jndi.properties</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          id="configurer">
        <property name="properties" ref="properties"/>
    </bean>

    <bean class="org.springframework.jndi.JndiObjectFactoryBean" name="datasource">
        <property name="jndiName" value="${datasource.name}"/>
    </bean>

    <bean class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate" id="jdbcTemplate">
        <constructor-arg ref="datasource"/>
    </bean>

    <bean class="ru.org.linux.spring.dao.GalleryDaoImpl" id="galleryDao">
        <property name="properties" ref="properties"/>
        <property name="template" ref="jdbcTemplate"/>
    </bean>

    <bean class="ru.org.linux.spring.dao.ArchiveDaoImpl" id="archiveDao">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <bean class="ru.org.linux.spring.dao.PollDaoImpl" id="pollDao">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <bean class="ru.org.linux.spring.dao.TopTenDaoImpl" id="topTenDao">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <bean class="ru.org.linux.spring.dao.TagDaoImpl" id="tagDao">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <bean class="ru.org.linux.spring.commons.MemCachedProvider" id="cacheProvider"/>

    <bean id="reCaptcha" class="net.tanesha.recaptcha.ReCaptchaImpl">
        <property name="privateKey" value="${recaptcha.private}"/>
        <property name="publicKey" value="${recaptcha.public}"/>
        <property name="recaptchaServer" value="http://api.recaptcha.net"/>
        <!-- Or, if you want to use SSL, then use this:
                    <property name="recaptchaServer" value="http://secure-api.recaptcha.net" />
            -->
        <property name="includeNoscript" value="true"/>
    </bean>
</beans>
